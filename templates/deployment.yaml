apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Values.color }}
  namespace: {{ .Values.namespace }}
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}
    app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Values.color }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/component: web
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Release.Name }}
      app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Values.color }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Release.Name }}
        app.kubernetes.io/instance: {{ .Release.Name }}-{{ .Values.color }}
    spec:
      containers:
        - name: tomcat-container
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: config-volume
              mountPath: /usr/local/tomcat/config/application.properties
              subPath: application.properties
          env:
            - name: SAMPLE_CONFIG_1
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: sample.config1
            - name: SAMPLE_CONFIG_2
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: sample.config2
            - name: SAMPLE_CONFIG_3
              valueFrom:
                configMapKeyRef:
                  name: {{ .Release.Name }}-config
                  key: sample.config3
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              # Unzip the WAR file
              unzip -o /usr/local/tomcat/webapps/sample.war -d /usr/local/tomcat/webapps/sample
              # Copy application.properties from ConfigMap
              cp /usr/local/tomcat/config/application.properties /usr/local/tomcat/webapps/sample/WEB-INF/classes/application.properties
              # Start Tomcat
              exec catalina.sh run
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-config
